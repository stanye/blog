<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>夜夜空里</title>
  <icon>https://www.gravatar.com/avatar/b8358bf23e74d35bc5437cdf331dcfd8</icon>
  <subtitle>StanYe&#39;s blog</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://stanye.com/blog/"/>
  <updated>2019-04-26T08:39:31.525Z</updated>
  <id>https://stanye.com/blog/</id>
  
  <author>
    <name>Stan Ye</name>
    <email>xiaocooshy@foxmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>aliyun-centos-fix</title>
    <link href="https://stanye.com/blog/2019/04/26/aliyun-centos-fix.html"/>
    <id>https://stanye.com/blog/2019/04/26/aliyun-centos-fix.html</id>
    <published>2019-04-26T08:22:09.000Z</published>
    <updated>2019-04-26T08:39:31.525Z</updated>
    
    <content type="html"><![CDATA[<p>这几天体验了下安骑士, 发现裸奔有些警告, 做了一些修复.<br><a id="more"></a></p><h2 id="禁止root直接登录"><a href="#禁止root直接登录" class="headerlink" title="禁止root直接登录"></a>禁止root直接登录</h2><ol><li>创建一个账号www</li><li>修改<code>/etc/ssh/sshd_config</code>, <code>PermitRootLogin</code>改成<code>no</code></li></ol><h2 id="默认登录端口检测"><a href="#默认登录端口检测" class="headerlink" title="默认登录端口检测"></a>默认登录端口检测</h2><p>修改<code>/etc/ssh/sshd_config</code>, 去掉<code>Port 22</code>注释#，并修改22为其它值</p><h2 id="设置用户密码"><a href="#设置用户密码" class="headerlink" title="设置用户密码"></a>设置用户密码</h2><ol><li>修改<code>/etc/security/pwquality.conf</code></li><li>去掉<code>minlen</code>注释，设置最小密码长度10</li><li>去掉<code>dcredit</code>注释，设置数字位数为负数建议-1(最少包含1位数字)</li><li>去掉<code>ucredit</code>注释，设置大写字母位数为负数-1(最少包含1位大写字母)</li><li>去掉<code>lcredit</code>注释，设置小写字母位数为负数-1(最少包含1位小写字母)</li><li>去掉<code>ocredit</code>注释，设置特殊字符位数为负数-1(最少包含1位特殊字符)</li></ol><h2 id="密码时间"><a href="#密码时间" class="headerlink" title="密码时间"></a>密码时间</h2><ol><li>修改<code>/etc/login.defs</code></li><li>密码失效时间, 365天</li><li>最小间隔时间, 7天</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几天体验了下安骑士, 发现裸奔有些警告, 做了一些修复.&lt;br&gt;
    
    </summary>
    
      <category term="BackEnd" scheme="https://stanye.com/blog/categories/BackEnd/"/>
    
    
      <category term="centOS" scheme="https://stanye.com/blog/tags/centOS/"/>
    
      <category term="aliyun" scheme="https://stanye.com/blog/tags/aliyun/"/>
    
  </entry>
  
  <entry>
    <title>使用git rebase对commits进行（合并/拆分/修改作者信息）</title>
    <link href="https://stanye.com/blog/2019/04/04/use-git-rebase-to-combine-split-resign-your-commits.html"/>
    <id>https://stanye.com/blog/2019/04/04/use-git-rebase-to-combine-split-resign-your-commits.html</id>
    <published>2019-04-04T09:55:32.000Z</published>
    <updated>2019-04-26T08:50:41.966Z</updated>
    
    <content type="html"><![CDATA[<p>这几天做开源项目，项目负责人对commits要求很高，故总结了合并/拆分commits以及修改提交信息等相关.<br><a id="more"></a></p><h2 id="1-对多个commits合并"><a href="#1-对多个commits合并" class="headerlink" title="1. 对多个commits合并"></a><strong>1. 对多个commits合并</strong></h2><p>  首先查看历史信息<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --oneline</span><br></pre></td></tr></table></figure></p><p>  <img src="https://ws4.sinaimg.cn/large/006tNc79gy1g1qsfqgbdqj30sm04amyb.jpg" alt=""></p><p>  想合并前两条<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i Head~2</span><br><span class="line">// 或者</span><br><span class="line">git rebase -i 33bda27 // 前一条</span><br></pre></td></tr></table></figure></p><p>  <img src="https://ws4.sinaimg.cn/large/006tNc79gy1g1qshl2y4zj30w40cwtb9.jpg" alt=""></p><p>  将第二条的<code>pick</code>改成<code>squash</code><br>  <img src="https://ws2.sinaimg.cn/large/006tNc79gy1g1qsm45qlmj30oe080gn1.jpg" alt=""></p><p>  保存, 修改提交信息, 再保存，查看<code>git log --oneline</code>, 确认修改完成<br>  <img src="https://ws4.sinaimg.cn/large/006tNc79gy1g1qsrwrseij30n0042gme.jpg" alt=""></p><p>  使用<code>git push</code>提交（视情况加<code>-f</code>force）</p><h2 id="2-对单个commits拆分"><a href="#2-对单个commits拆分" class="headerlink" title="2. 对单个commits拆分"></a><strong>2. 对单个commits拆分</strong></h2><p>  以合并的结果做拆分演示<br>  <img src="https://ws4.sinaimg.cn/large/006tNc79gy1g1qsrwrseij30n0042gme.jpg" alt=""></p><p>  想拆分第一条<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i Head~1</span><br><span class="line">// 或者</span><br><span class="line">git rebase -i 33bda27 // 前一条</span><br></pre></td></tr></table></figure></p><p>  <img src="https://ws1.sinaimg.cn/large/006tNc79gy1g1qswmccq5j30qq06ygms.jpg" alt=""></p><p>  将第一条的<code>pick</code>改成<code>edit</code>, 后保存并退出<br>  <img src="https://ws2.sinaimg.cn/large/006tNc79gy1g1qsx3nnh5j30o6086dh3.jpg" alt=""></p><p>  发现此时属于rebase阶段<br>  <img src="https://ws1.sinaimg.cn/large/006tNc79gy1g1qt1h5nv2j30xa07cq46.jpg" alt=""></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD^ // 拉取之后的提交到版本库的文件到暂存区, 改操作不影响工作区</span><br></pre></td></tr></table></figure><p>  <img src="https://ws1.sinaimg.cn/large/006tNc79gy1g1qt3ut291j30vw0awwgz.jpg" alt=""></p><p>  使用<code>git add</code>和<code>git commit</code>分文件进行提交, 生成不同的commits</p><p>  提交完成后使用<code>git rebase --continue</code>, 完成rebase.</p><p>  使用<code>git push</code>提交（视情况加<code>-f</code>force）</p><h2 id="3-更改作者信息"><a href="#3-更改作者信息" class="headerlink" title="3. 更改作者信息"></a><strong>3. 更改作者信息</strong></h2><p>上述rebase步骤中加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --author &quot;aaa &lt;bbb@cc.com&gt;&quot; // 要修改的作者名字和邮箱</span><br></pre></td></tr></table></figure></p><h2 id="4-如何rebase第一条（root）"><a href="#4-如何rebase第一条（root）" class="headerlink" title="4. 如何rebase第一条（root）"></a><strong>4. 如何rebase第一条（root）</strong></h2><p>上述rebase起始步骤中加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i --root// 要修改的作者名字和邮箱</span><br></pre></td></tr></table></figure></p><p>PS：如果想修改root的提交信息呢<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;sha1-of-root&gt; // checkout到第一条</span><br><span class="line"></span><br><span class="line">git commit --amend --author &quot;aaa &lt;bbb@cc.com&gt;&quot; // 要修改的作者名字和邮箱</span><br><span class="line">// OR</span><br><span class="line">git commit --amend --reset-author</span><br><span class="line"></span><br><span class="line">git rebase --onto HEAD HEAD master</span><br></pre></td></tr></table></figure></p><h2 id="5-one-more-thing"><a href="#5-one-more-thing" class="headerlink" title="5. one more thing"></a><strong>5. one more thing</strong></h2><p><code>git commit</code>加<code>-s</code>参数可以加上Signed-off-by信息</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几天做开源项目，项目负责人对commits要求很高，故总结了合并/拆分commits以及修改提交信息等相关.&lt;br&gt;
    
    </summary>
    
      <category term="IT技巧" scheme="https://stanye.com/blog/categories/IT%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="git" scheme="https://stanye.com/blog/tags/git/"/>
    
      <category term="git rebase" scheme="https://stanye.com/blog/tags/git-rebase/"/>
    
  </entry>
  
  <entry>
    <title>升级macOS Mojave后问题汇总及解决办法</title>
    <link href="https://stanye.com/blog/2018/10/23/macOS-Mojave-problems-and-solutions.html"/>
    <id>https://stanye.com/blog/2018/10/23/macOS-Mojave-problems-and-solutions.html</id>
    <published>2018-10-23T06:11:26.000Z</published>
    <updated>2019-04-26T08:51:24.283Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搜狗"><a href="#搜狗" class="headerlink" title="搜狗"></a>搜狗</h2><pre><code>问题描述：系统升级之后发现断断续续一直鼠标在转圈解决方案：搜狗升级到`4.8`之后解决问题</code></pre><a id="more"></a><h2 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h2><pre><code>问题描述：升级后使用iTerm出现乱码，原生terminal没问题解决方案：iTerms2 -&gt; Preferences -&gt; Advanced -&gt; 搜索LC_CTYPE -&gt; value值设置`zh_CN.UTF-8`</code></pre><h2 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h2><pre><code>问题描述：字体变细解决方案：命令行输入`defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`</code></pre><h2 id="Wechat和Tim"><a href="#Wechat和Tim" class="headerlink" title="Wechat和Tim"></a>Wechat和Tim</h2><pre><code>问题描述：输入框焦点容易丢失，必须手动点击程序解决方案：升级最新版Wechat和Tim</code></pre><h2 id="Git丢失"><a href="#Git丢失" class="headerlink" title="Git丢失"></a>Git丢失</h2><pre><code>问题描述：更新后git没了解决方案：命令行输入`xcode-select –install`</code></pre><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><pre><code>问题描述：写这篇文字的时候，居然发现生成的页面英文的地方被转成日文解决方案：_config.yml文件language设置`zh-Hans`</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搜狗&quot;&gt;&lt;a href=&quot;#搜狗&quot; class=&quot;headerlink&quot; title=&quot;搜狗&quot;&gt;&lt;/a&gt;搜狗&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;问题描述：系统升级之后发现断断续续一直鼠标在转圈
解决方案：搜狗升级到`4.8`之后解决问题
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="IT技巧" scheme="https://stanye.com/blog/categories/IT%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="Mojave" scheme="https://stanye.com/blog/tags/Mojave/"/>
    
      <category term="MacOS" scheme="https://stanye.com/blog/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>E3游戏WishList</title>
    <link href="https://stanye.com/blog/2018/06/11/E3%E6%B8%B8%E6%88%8FWishList.html"/>
    <id>https://stanye.com/blog/2018/06/11/E3游戏WishList.html</id>
    <published>2018-06-11T04:26:25.000Z</published>
    <updated>2019-04-26T08:49:27.948Z</updated>
    
    <content type="html"><![CDATA[<p>E3游戏整理<br><a id="more"></a></p><table><thead><tr><th style="text-align:center">Name</th><th style="text-align:center">Game Platform</th><th style="text-align:center">Expectation Value</th><th style="text-align:center">Price</th><th style="text-align:center">Release</th><th style="text-align:center">Postscript</th></tr></thead><tbody><tr><td style="text-align:center">Battlefield V</td><td style="text-align:center">PC</td><td style="text-align:center">90</td><td style="text-align:center">384</td><td style="text-align:center">-</td><td style="text-align:center">Origin平台</td></tr><tr><td style="text-align:center">Command&amp;Conquer:Rivals</td><td style="text-align:center">Mobile</td><td style="text-align:center">60</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">Anthem</td><td style="text-align:center">PC</td><td style="text-align:center">80</td><td style="text-align:center">-</td><td style="text-align:center">2019/2/22</td><td style="text-align:center">命运2like</td></tr><tr><td style="text-align:center">Kingdom Hearts 3</td><td style="text-align:center">PS4</td><td style="text-align:center">70</td><td style="text-align:center">-</td><td style="text-align:center">2019/1/25</td><td style="text-align:center">NO PC</td></tr><tr><td style="text-align:center">Assassin’s Creed Odyssey</td><td style="text-align:center">PC</td><td style="text-align:center">80</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">this is sparta</td></tr><tr><td style="text-align:center">The Division 2</td><td style="text-align:center">PC</td><td style="text-align:center">90</td><td style="text-align:center">-</td><td style="text-align:center">2019/3/15</td><td style="text-align:center">原力2</td></tr><tr><td style="text-align:center">Halo Infinite</td><td style="text-align:center">XBOX</td><td style="text-align:center">90</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">玩不到</td></tr><tr><td style="text-align:center">Sekiro：Shadows Die Twice</td><td style="text-align:center">PC</td><td style="text-align:center">90</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">受虐狂</td></tr><tr><td style="text-align:center">Fall out 76</td><td style="text-align:center">PC</td><td style="text-align:center">70</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">Online</td></tr><tr><td style="text-align:center">Devil May Cry 5</td><td style="text-align:center">PC</td><td style="text-align:center">90</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">恶魔五月哭</td></tr><tr><td style="text-align:center">Shadow of the Tomb Raider</td><td style="text-align:center">PC</td><td style="text-align:center">90</td><td style="text-align:center">￥379</td><td style="text-align:center">2018/9/15</td><td style="text-align:center">劳拉</td></tr><tr><td style="text-align:center">Cyberpunk 2077</td><td style="text-align:center">PC</td><td style="text-align:center">90</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">Doom Eternal</td><td style="text-align:center">PC</td><td style="text-align:center">70</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">The Elder Scrolls VI</td><td style="text-align:center">PC</td><td style="text-align:center">100</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">Starfiled</td><td style="text-align:center">PC</td><td style="text-align:center">60</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">Beyond Good and Evil 2</td><td style="text-align:center">PC</td><td style="text-align:center">80</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">Resident Evil 2 : RE</td><td style="text-align:center">PC</td><td style="text-align:center">80</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">Death Stranding</td><td style="text-align:center">PC</td><td style="text-align:center">100</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;E3游戏整理&lt;br&gt;
    
    </summary>
    
      <category term="Game" scheme="https://stanye.com/blog/categories/Game/"/>
    
    
      <category term="E3" scheme="https://stanye.com/blog/tags/E3/"/>
    
  </entry>
  
  <entry>
    <title>leetcode - 350. 两个数组的交集 II</title>
    <link href="https://stanye.com/blog/2018/06/06/leetcode-350-%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86-II.html"/>
    <id>https://stanye.com/blog/2018/06/06/leetcode-350-两个数组的交集-II.html</id>
    <published>2018-06-06T03:41:43.000Z</published>
    <updated>2019-04-11T03:08:29.353Z</updated>
    
    <content type="html"><![CDATA[<p>给定两个数组，写一个方法来计算它们的交集。<br><a id="more"></a><br>例如:</p><pre><code>给定 nums1 = [1, 2, 2, 1], nums2 = [2, 2], 返回 [2, 2].</code></pre><p>注意：</p><pre><code>- 输出结果中每个元素出现的次数，应与元素在两个数组中出现的次数一致。- 我们可以不考虑输出结果的顺序。</code></pre><p>跟进:</p><pre><code>- 如果给定的数组已经排好序呢？你将如何优化你的算法？- 如果 nums1 的大小比 nums2 小很多，哪种方法更优？- 如果nums2的元素存储在磁盘上，内存是有限的，你不能一次加载所有的元素到内存中，你该怎么办？</code></pre><p>我的答案：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums1</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums2</span></span><br><span class="line"><span class="comment"> * @return &#123;number[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> intersect = <span class="function"><span class="keyword">function</span>(<span class="params">nums1, nums2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="keyword">var</span> List = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; nums1.length; i++) &#123;</span><br><span class="line">        List.push(nums1[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; nums2.length; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> cNum = nums2[i];</span><br><span class="line">        <span class="keyword">var</span> cIndex = List.indexOf(cNum);</span><br><span class="line">        <span class="keyword">if</span> (cIndex != <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">delete</span> List[cIndex];</span><br><span class="line">            arr.push(cNum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>给出的耗时最短解</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums1</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums2</span></span><br><span class="line"><span class="comment"> * @return &#123;number[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> intersect = <span class="function"><span class="keyword">function</span>(<span class="params">nums1, nums2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> map=&#123;&#125;;</span><br><span class="line">    <span class="keyword">const</span> res=[];</span><br><span class="line">    nums1.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">v</span>) </span>&#123;</span><br><span class="line">        map[v]?map[v]++:map[v]=<span class="number">1</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    nums2.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">v</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(map[v])&#123;</span><br><span class="line">            res.push(v);</span><br><span class="line">            map[v]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;给定两个数组，写一个方法来计算它们的交集。&lt;br&gt;
    
    </summary>
    
      <category term="FrontEnd" scheme="https://stanye.com/blog/categories/FrontEnd/"/>
    
    
      <category term="leetcode" scheme="https://stanye.com/blog/tags/leetcode/"/>
    
      <category term="algorithm" scheme="https://stanye.com/blog/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Skeleton Screen - 骨架屏设计</title>
    <link href="https://stanye.com/blog/2018/05/30/skeleton-screen.html"/>
    <id>https://stanye.com/blog/2018/05/30/skeleton-screen.html</id>
    <published>2018-05-30T03:00:00.000Z</published>
    <updated>2019-04-11T03:09:19.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Skeleton-Screen"><a href="#Skeleton-Screen" class="headerlink" title="Skeleton Screen"></a>Skeleton Screen</h1><a id="more"></a><ol><li><p>陈纬杰 - 使用 Skeleton Screen 提升用户感知体验</p><p> <a href="https://cloud.tencent.com/developer/article/1006169" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1006169</a></p></li><li><p>龙爪槐守望者 - 这个控件叫：Skeleton Screen/加载占位图</p><p> <a href="https://www.jianshu.com/p/d152e1d84296" target="_blank" rel="noopener">https://www.jianshu.com/p/d152e1d84296</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Skeleton-Screen&quot;&gt;&lt;a href=&quot;#Skeleton-Screen&quot; class=&quot;headerlink&quot; title=&quot;Skeleton Screen&quot;&gt;&lt;/a&gt;Skeleton Screen&lt;/h1&gt;
    
    </summary>
    
      <category term="产品设计" scheme="https://stanye.com/blog/categories/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="skeleton screen" scheme="https://stanye.com/blog/tags/skeleton-screen/"/>
    
  </entry>
  
  <entry>
    <title>技术型产品经理需要了解的知识点</title>
    <link href="https://stanye.com/blog/2018/05/10/Technical-product-manager.html"/>
    <id>https://stanye.com/blog/2018/05/10/Technical-product-manager.html</id>
    <published>2018-05-10T11:11:22.000Z</published>
    <updated>2019-04-11T03:10:01.165Z</updated>
    
    <content type="html"><![CDATA[<ol><li>MVC<br>MVC是一个框架模式，它强制性的使应用程序的输入、处理和输出分开。以JAVA为例，最典型的MVC就是JSP + SERVLET+ JAVABEAN的模式。通俗的讲，程序可以有一种方式的写法，都在JSP的代码中处理所有事情。但是这样回答来极大的耦合问题，所以才去MVC模式把视觉（前台）、后台、数据库拆分开来处理。减少偶尔、增加复用性等。<a id="more"></a></li><li>URL 路由</li><li>模板<br> 一段代码经常被重复使用，我们的工程师们会把它封装成一个文件，然后在需要使用的时候去调用它。我们在设计产品的时候其实常用到这个思维，比如设计权限模块，你需要做的是把一个系统中的公司、分公司、部门等进行拆分，封装成不同的功能。</li><li>RESTful API <a href="http://www.ruanyifeng.com/blog/2014/05/restful_api" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2014/05/restful_api</a></li><li>MySQL</li><li>Bootstrap</li><li>Redis, 用Memcached或Redis来做缓存，提高应用性能</li><li>版本管理Git、svn</li><li>Markdown</li><li>前后端分离</li><li>微信H5开发</li><li>Docker</li><li>机器学习</li><li>Chrome 调试<br>你能够感知到的一般都是你所能看到的，这些BUG都是很简单就能修复的。</li><li>CURL 测试 API</li><li>数据分析埋点</li><li>学前端不要写脚本抢月饼，学后端记得做好权限检查</li><li>http的基本原理</li><li>app和h5的区别以及通信。</li><li>web前端的基本概念。</li><li>后台的基本知识</li><li>常用的技术术语，比如SDK，插件，接口，协议等等</li><li>数据库的基础知识<br>一方面，有助于与技术的沟通及产品的实现；另一方面，特别是在创业型公司，查询后台不完善甚至压根没有，很多时候需要出数据（如了解交易量、转化率等），如果自己不会的话就得麻烦开发大哥了。但是，都很忙的。一次两次还好，次数多了早晚要被嫌弃。有人说提需求开发数据平台，在人力紧张需求优先级低的情况下谁给你开发？<br>select…from…where…group by….order by..</li><li>前端和后端的关系</li><li>HTTP与HTTPs的区别</li><li>比如get和post</li><li>比如算法到底是个啥意思</li><li>比如接口是个啥意思（天天说对接，对接什么玩意）</li><li>XML和Json都是什么</li><li>html5里有什么值得利用的新特性</li><li>他们按f12调出来的是什么、可以干什么<br>研发资源非常珍贵。</li><li>base64编码能帮你们做到什么</li><li>数据库的一些基本概念</li><li>域名、URL、IP到底都是什么。</li><li>主要是网站产品主要依靠浏览器<br>编程语言开发的php,java或者Python。<br>产品项目中使用开发框架，是团队自己研发的框架，还是使用市面上比较流行的框架。<br>其次是数据库的选择，根据你们的业务需求是使用mysql这种关系型数据库还是mongodb这类非关系型数据库<br>最后就是服务器，服务器一般关心的问题就是稳定性，安全性，还有负载了<br>根据不同需求选择服务器，使用什么样的服务器？自己管理的，还是云。<br>云的话还要了解一些云服务和产品的内容，比如RDS，负载均衡，内容分发。<br>手机APP这样的产品需求跨平台性以及其他细节问题。</li><li>技术特性技术的生命周期：<br>技术生命周期一般就2~3年，服务器操作系统生命周期会更长一些，，<br>关键问题是这个问题本身就不太现实，我们很难预测2~3年以后我们的产品的样子。<br>作为PM你不用了解具体的实现方式，开发效率和健壮性怎么样，是不是符合我现阶段产品开发的需求。</li><li>不管怎么说作为PM掌控产品全局你要知道整个项目的技术开发成本是怎样的。<br>程序员是个喜欢创造的工种，如果你只是设计好了让他们照着设计做他们会玩的很没乐趣的。要让他们也参与其中你会发现你的项目会比你想象中的进展要好。</li><li>会写代码是加分项；不了解大局上来就聊代码，是越俎代庖,你需要知道水可以用来泡茶，做汤。不需要知道水是H2O,水有哪些种类，什么水泡茶最好，什么水做汤更赞。忌不懂技术,忌懂技术.</li><li><a href="https://www.codecademy.com/zh/" target="_blank" rel="noopener">https://www.codecademy.com/zh/</a></li><li>对技术架构或某些技术问题的看法，立刻遭到赞扬：“你很懂技术嘛！”这时马上打着哈哈说：“懂个p啊，我连hello world都不会写，完全是纸上谈兵。”于是嬉笑声中，一群人把手里的箭收起来了。</li><li>产品经理懂技术 ＝ 流氓会武术。</li><li>你怎么实现我不管，我就要这个<br>这个功能不就是xxx么，你直接说要多久把<br>这次的需求很简单，只要做xxx就行了，prd你看下哈<br>你的产品架构，其实也是技术架构！一定不能乱<br>前端要做哪些？字段、样式、交互（操作前、操作中、操作后）、边界条件（字数、图片尺寸等等<br>对前端说：我们这边新增了哪几个页面，ui设计稿什么样的，交互是什么样的…前端done!<br>对后段说：我们这次的产品大逻辑什么，新增了哪些字段，最重要和复杂的逻辑是哪些，可能要哪边的接口，那边的技术已经帮你找好了….后端done!<br>对qa说：这次的迭代和之前有什么不同，最重要的测试点是什么，有哪些风险要测下，回头上线的时候跟我说下我们一起看下…qa done!</li><li><a href="http://www.cnblogs.com/dunnice/articles/2733430.html" target="_blank" rel="noopener">http://www.cnblogs.com/dunnice/articles/2733430.html</a></li><li>前端=html+css+js=&gt;结构+字段+样式+交互<br>程序=算法+数据结构<br><a href="https://www.zhihu.com/question/26743347" target="_blank" rel="noopener">https://www.zhihu.com/question/26743347</a><br><a href="https://www.zhihu.com/question/21380252" target="_blank" rel="noopener">https://www.zhihu.com/question/21380252</a><br>数据驱动产品的发展～</li><li>不同系统的兼容性问题<pre><code>不同版本的兼容性问题不同屏幕尺寸的兼容性问题android 和 ios 系统的规范android 和 ios 打包发布流程</code></pre></li><li>‘技术无法实现’的潜台词可能是<br>给的资源不够， 完成不了<br>你的优先级低， 不想给你做<br>看你不爽， 不想给你做<br>这功能太傻不应该做<br>最后才是真的技术无法实现</li><li>HTML5和NATIVE的特点和区别，哪些在微信中能做，哪些不能做</li><li>如果你知道如果将用户的操作分成0.01秒为单位的节点，并将所有的用户行为都预测出来。你就是产品经理。</li><li>在一个项目里面 产品经理看懂一个api 难道不是只要看api说明就行了 为什么要懂技术<br>你知道了 都能做什么 然后不就是你排列组合的天下了<br>如果你看的api没说明 让程序员补去</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;MVC&lt;br&gt;MVC是一个框架模式，它强制性的使应用程序的输入、处理和输出分开。以JAVA为例，最典型的MVC就是JSP + SERVLET+ JAVABEAN的模式。通俗的讲，程序可以有一种方式的写法，都在JSP的代码中处理所有事情。但是这样回答来极大的耦合问题，所以才去MVC模式把视觉（前台）、后台、数据库拆分开来处理。减少偶尔、增加复用性等。
    
    </summary>
    
      <category term="产品设计" scheme="https://stanye.com/blog/categories/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="PM" scheme="https://stanye.com/blog/tags/PM/"/>
    
  </entry>
  
  <entry>
    <title>产品经理沟通技巧(pdf)</title>
    <link href="https://stanye.com/blog/2018/05/10/communicate-with-product-manager-pdf.html"/>
    <id>https://stanye.com/blog/2018/05/10/communicate-with-product-manager-pdf.html</id>
    <published>2018-05-10T11:07:10.000Z</published>
    <updated>2019-04-26T08:48:07.002Z</updated>
    
    <content type="html"><![CDATA[<p>之前做了《产品经理与程序员和谐相处之道》的ppt分享，此处是导出pdf格式.<br><a id="more"></a></p><p><a href="https://pan.baidu.com/s/1m3IG17ZDyrLN0RtYmQBH0A" target="_blank" rel="noopener">百度网盘提取地址</a>  提取码: <code>m5mg</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前做了《产品经理与程序员和谐相处之道》的ppt分享，此处是导出pdf格式.&lt;br&gt;
    
    </summary>
    
      <category term="产品设计" scheme="https://stanye.com/blog/categories/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="PM" scheme="https://stanye.com/blog/tags/PM/"/>
    
      <category term="ppt" scheme="https://stanye.com/blog/tags/ppt/"/>
    
  </entry>
  
  <entry>
    <title>产品经理如何与技术沟通</title>
    <link href="https://stanye.com/blog/2018/05/10/communicate-with-product-manager.html"/>
    <id>https://stanye.com/blog/2018/05/10/communicate-with-product-manager.html</id>
    <published>2018-05-10T11:07:10.000Z</published>
    <updated>2019-04-11T03:07:51.939Z</updated>
    
    <content type="html"><![CDATA[<ol><li>产品经理应该：提出来 讲明白 说服他 验收好</li><li>核心的竞争优势就是在技术方面，这个是非技术出身的产品经理最缺的一项技能。技术出身的产品经理跟工程师沟通会比较顺畅，能够深刻体会并理解工程师的思维，提出的设计和需求也会比较接地气，因此不容易跟开发人员产生矛盾。需求策划方面，每一个需求功能点的提出，技术出身的产品经理都可以很快评估出技术实现的可行性，实现所需的大概时间，技术存在的一些风险或问题，因此可以很快将需求点落到实处，大大缩短需求到实现转化所需的周期。<a id="more"></a> </li><li>工程师的思维跟产品经理的思维，关注点和考虑问题的方式存在很大的区别。会太注重并纠结技术层面的问题，而忽视了产品经理应该关注的是整个产品项目的大局。产品前期的设计才是整个项目的重心，后面的运营推广是项目成败的关键。市场及商业嗅觉不敏感，产品设计，运营推广等领域缺乏相关的经验，这方面需要投入大量的时间去培养与磨炼，比如商业嗅觉的培养，数据运维的数据分析，营销推广的策划和布局，这些都不是一朝一夕可以练好的内功，需要基于大量的阅读学习，观察及实操后一步步磨炼出来。</li><li>在产品大方向的把握，设计细节的考量，运营推广思路上面会存在非常多的盲区，导致对整个项目的理解不够透彻</li><li>产品经理在项目推进过程中需要面对老板，工程师，设计师，测试人员，运营，市场等各个领域的人，应该学会换位思考，站在各个不同角色的人的立场去考虑问题，才能协调到更多的资源去配合你完成项目的推进工作。</li><li>不要花太多的时间去纠结或花在研究技术上面，而应该把自己的时间合理地分配到其他的技能的学习上面。产品经理是一个对综合能力要求特别高的职位，需要不断地学习，不断地吸收这个领域的知道养分。不要因为“技术”这棵小树，而放弃了产品的这座大森林。</li><li>做技术时，你经常需要面对的问题是如何解决技术难题；而做了产品，你所面对的大多数问题是如何搞定人。比如，老板提了一个不合理的需求，你应该怎么婉转地打掉；UI设计师跟你闹矛盾，你怎么让她继续配合你工作；项目资源紧缺，开发周期赶不及，你如何才能申请到更多的资源。除了知识面需要扩充好几倍外，做人做事的能力，也要迅速跟上。</li><li>找准自己的定位，分析自己之于团队的价值。沟通是一门艺术。艺术源自生活，不必刻意追求。先试着让身边的人快乐。</li><li>程序考虑问题的出发点大多是：体现自己的技术水平。 我接触的程序员喜欢用高效、简单、先进的技术手段解决问题。通常他们反驳产品都是想令代码更简单更高效，而产品却变得复杂、多步骤甚至多余。产品都希望把简单留给用户，把复杂留给开发。这是个对立面。所以程序员转产品，首先要改变自己的思维，从用户和需求出发，而不是从技术角度.  </li><li>产品工作是感性的，做出一款产品与做出一款好产品的差别无比巨大，大部分所谓的产品经理只能说在从事着一份工作而已，得到个好听又最容易被人吐槽的名头，不代表他真的很厉害.  </li><li>马化腾(Pony)，张小龙，周鸿祎都是程序员出身的、中国最优秀的互联网产品经理。只有当你跨越了傻瓜心态之后，才算是迈出了成功转型产品经理的第一步。</li><li>你永远不要假设用户是聪明的，用户的弱智程度永远超出你想象力的下限。所以，当你设计产品的界面和交互的时候，一定不要拿自己的经验去想当然，一定要假设是在给一个弱智做产品，尽量简化，让产品非常易用才行。</li><li>真正好的产品经理应该是以结果为导向的. </li><li>技术人员如果没有追求完美的心，就无法成为一个优秀的技术人员。然而带有「完美主义综合症」的产品经理是可怕的。</li><li>在这个产品经理，视觉设计，程序员共同参与的产品生产过程中，程序员是最后的环节，当程序员在代码实现的过程中发现了产品逻辑的错误，或者产品设计的问题，是非常被动的。这个时候程序员再要求产品经理更改设计，修正产品交互逻辑，产品经理通常的反应就是：「程序员又和我讨价还价，产品deadline又要延后了」，跟着双方就开始剑拔弩张的对峙。</li><li>产品经理负责搜集和定义产品需求，整理产品逻辑规则，设计产品原型稿和交互，这个阶段并不需要程序员开始写代码，但是从一开始就让程序员，运营，甚至运维工程师都参与进来</li><li>程序员从一开始就了解了产品的来龙去脉，对产品需求和产品要达到的目标非常清楚，这样在和产品经理的配合中，就非常容易理解产品经理提出的很多功能要求，沟通起来非常顺畅；程序员从一开始就参与，并且持续参与产品设计的过程，最大的好处在于从一开始就可以纠正可能出现的产品设计逻辑错误，以及评估技术难以实现的产品功能。这样等到真正进入开发阶段，研发周期是非常可控的，基本不会出现延误。一些有良好产品意识的程序员，可以帮助产品经理从一开始就完善产品逻辑，从实现上修正产品可能遇到的问题，让产品开发过程变得更加有保障。很多产品经理犯的一个重大错误就是：直到原型稿交互稿定稿之后，才交给程序员，之前全无沟通，然后逼着程序员立刻评估一个精确的开发周期。这个时候程序员内心是非常抗拒的。一来我完全不了解这个产品，不知道做这个产品是干啥的？能够解决什么问题？是否有更好的替代解决方案；二来我也不清楚这个产品逻辑是否有需要调整和修正的地方，以及有些技术上需要投入很多资源但是不划算的功能。</li><li>产品经理应该传递一个信息：产品是大家的，需要大家共同合作，一起努力把产品做好，无论是产品，视觉，研发，还是运营，大家都是为了一个共同的目标而努力。</li><li>不需要懂技术，但是逻辑要严谨</li><li>Bug修好了程序就会马上运营，程序员可以接着下一个代码的编写，但是先生生活中可能不太一样，刚吵完一架，可能就没法友好的合作了。</li><li>如果老板同意说，如果PM加需求，要么就砍掉一个差不多规模的旧的，要么就延长期限，我觉得肯定不会打起来。</li><li>戒掉“应该”，“大概”，“也许”，”我想“，”可能“这种模棱两可的词语。</li><li>to be continue</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;产品经理应该：提出来 讲明白 说服他 验收好&lt;/li&gt;
&lt;li&gt;核心的竞争优势就是在技术方面，这个是非技术出身的产品经理最缺的一项技能。技术出身的产品经理跟工程师沟通会比较顺畅，能够深刻体会并理解工程师的思维，提出的设计和需求也会比较接地气，因此不容易跟开发人员产生矛盾。需求策划方面，每一个需求功能点的提出，技术出身的产品经理都可以很快评估出技术实现的可行性，实现所需的大概时间，技术存在的一些风险或问题，因此可以很快将需求点落到实处，大大缩短需求到实现转化所需的周期。
    
    </summary>
    
      <category term="产品设计" scheme="https://stanye.com/blog/categories/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="PM" scheme="https://stanye.com/blog/tags/PM/"/>
    
  </entry>
  
  <entry>
    <title>high-concurrency-experience</title>
    <link href="https://stanye.com/blog/2018/04/30/high-concurrency-experience.html"/>
    <id>https://stanye.com/blog/2018/04/30/high-concurrency-experience.html</id>
    <published>2018-04-30T06:41:42.000Z</published>
    <updated>2019-04-30T07:09:01.648Z</updated>
    
    <content type="html"><![CDATA[<p>用户数增长，公司项目遇到并发的难题。网上学习几点如下：<br><a id="more"></a></p><h2 id="处理高并发的业务逻辑"><a href="#处理高并发的业务逻辑" class="headerlink" title="处理高并发的业务逻辑"></a>处理高并发的业务逻辑</h2><ul><li>前端: 异步请求 + 资源静态化 + cdn</li><li>后端: 请求队列 + 轮询分发 + 负载均衡 + 共享缓存</li><li>数据层: redis + 数据分表 + 写队列</li><li>存储: raid阵列 + 热备</li><li>网络: dns轮询 + DDOS防护</li></ul><p>简而言之就是分区、分表、分库，后端算法优化，公共数据缓存，服务器上负载均衡，前端减少连接数、瘦身</p><h2 id="如何学习高并发"><a href="#如何学习高并发" class="headerlink" title="如何学习高并发"></a>如何学习高并发</h2><p>redis, nginx, keeplive, DRBD, heartbeat这些工具在虚拟机上面跑起来.<br>因为有些工具运行的配置要求太高, 必须多台服务器配合才能完成. 总监那边选型TiDB，已经和老板申报了机器.</p><h2 id="模拟高并发"><a href="#模拟高并发" class="headerlink" title="模拟高并发"></a>模拟高并发</h2><p><a href="http://tengine.taobao.org/document_cn/benchmark_cn.html" target="_blank" rel="noopener">tengine</a></p><p>公司内则用php写了一些针对要测试的功能点的脚本</p><h2 id="如何向别人吹我们的系统"><a href="#如何向别人吹我们的系统" class="headerlink" title="如何向别人吹我们的系统"></a>如何向别人吹我们的系统</h2><ol><li>采用了复杂的分层方案，以保证良好的性能和水平扩展性。要点如下:</li></ol><ul><li>动静分离: 通过CDN系统分发静态资源: js, css, 图片, 音频, 视频等资源</li><li>应用集群: 通过负载均衡技术，实现的应用服务器集群，具有很高的并发处理能力和扩展性。可以根据实际需要迅速扩充服务器，部署应用之后即可直接上线提供服务。</li><li>缓存集群: 通过一致性Hash算法实现实现缓存分片，保证缓存系统的响应速度和可扩展性。通过主从复制，保证缓存系统的可靠性。</li><li>读写分离: 读写分离，保证两者都具有具有良好的性能。采用写直达技术，保证缓存和数据库数据的一致性。</li><li>数据库集群: 采用分布式数据库集群技术（垂直和水平切分技术，复制技术），保证数据库系统的性能、稳定性和可扩展性。</li><li>消息队列和辅助任务集群: 长时间运行的任务，先入队列，再由系统调度到后台任务集群中运行，可保证前端页面的响应性能，并为大型的分析作业提供运行环境，并具有很高的扩展能力。</li></ul><ol start="2"><li>充分测试:</li></ol><ul><li>持续集成: 持续的自动化测试。</li><li>压力测试: 系统功能模块在上线之前，会经过充分的性能和压力测试，只有在功能、性能和吞吐量达到预期设计指标后，才会上线运行。</li></ul><ol start="3"><li>部署和监控方案:</li></ol><ul><li>红蓝部署: 保证系统升级和发布的稳定性，出现问题时，可迅速回退。</li><li>容灾机制: 自动备份机制，降低灾难性事件（如自然灾害等）对系统的影响。</li><li>监控方案: 完善的自动监控和报警方案，可以提前发现和报告异常情况，并提醒运维团队及时处理相关问题。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用户数增长，公司项目遇到并发的难题。网上学习几点如下：&lt;br&gt;
    
    </summary>
    
      <category term="BackEnd" scheme="https://stanye.com/blog/categories/BackEnd/"/>
    
    
      <category term="redis" scheme="https://stanye.com/blog/tags/redis/"/>
    
      <category term="nginx" scheme="https://stanye.com/blog/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>rm-input-type-number-arrows</title>
    <link href="https://stanye.com/blog/2017/06/05/rm-input-type-number-arrows.html"/>
    <id>https://stanye.com/blog/2017/06/05/rm-input-type-number-arrows.html</id>
    <published>2017-06-05T07:18:18.000Z</published>
    <updated>2019-04-30T07:21:00.837Z</updated>
    
    <content type="html"><![CDATA[<h2 id="css"><a href="#css" class="headerlink" title="css"></a>css</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// chrome</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-outer-spin-button</span>,</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-inner-spin-button</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-appearance</span>: none <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// firefox</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type="number"]</span> &#123;</span><br><span class="line">  <span class="attribute">-moz-appearance</span>:textfield;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="不用type-number"><a href="#不用type-number" class="headerlink" title="不用type=number"></a>不用type=number</h2><p>将<code>type=&quot;number&quot;</code>改为<code>type=&quot;tel&quot;</code>, 同样是数字键盘，但是没有箭头。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;css&quot;&gt;&lt;a href=&quot;#css&quot; class=&quot;headerlink&quot; title=&quot;css&quot;&gt;&lt;/a&gt;css&lt;/h2&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa
      
    
    </summary>
    
      <category term="FrontEnd" scheme="https://stanye.com/blog/categories/FrontEnd/"/>
    
    
      <category term="css" scheme="https://stanye.com/blog/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Vue更新数组状态方法</title>
    <link href="https://stanye.com/blog/2017/05/16/vue-update-array.html"/>
    <id>https://stanye.com/blog/2017/05/16/vue-update-array.html</id>
    <published>2017-05-16T06:58:53.000Z</published>
    <updated>2019-04-11T03:10:11.769Z</updated>
    
    <content type="html"><![CDATA[<p>直接修改数组检测不到变化：<br><a id="more"></a><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vm.Arr[index] = newItem;</span><br><span class="line">vm.Arr.length = newLength;</span><br></pre></td></tr></table></figure></p><p>由于JavaScript的限制，采用以下方法:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// way 1</span></span><br><span class="line">Vue.set(old.Arr, index, newItem);</span><br><span class="line"><span class="comment">// way 2</span></span><br><span class="line">old.Arr.splice(index, <span class="number">1</span>, newItem);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;直接修改数组检测不到变化：&lt;br&gt;
    
    </summary>
    
      <category term="FrontEnd" scheme="https://stanye.com/blog/categories/FrontEnd/"/>
    
    
      <category term="vue" scheme="https://stanye.com/blog/tags/vue/"/>
    
      <category term="array" scheme="https://stanye.com/blog/tags/array/"/>
    
  </entry>
  
  <entry>
    <title>mysql查重</title>
    <link href="https://stanye.com/blog/2017/05/03/mysql-duplicate-checking.html"/>
    <id>https://stanye.com/blog/2017/05/03/mysql-duplicate-checking.html</id>
    <published>2017-05-03T06:30:20.000Z</published>
    <updated>2019-04-26T08:52:07.639Z</updated>
    
    <content type="html"><![CDATA[<p>mysql查重：<br><a id="more"></a></p><h2 id="单字段"><a href="#单字段" class="headerlink" title="单字段"></a>单字段</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">member</span> <span class="keyword">where</span> mobile <span class="keyword">in</span> (<span class="keyword">select</span> mobile <span class="keyword">from</span> <span class="keyword">member</span> <span class="keyword">group</span> <span class="keyword">by</span> mobile  <span class="keyword">having</span> <span class="keyword">count</span>(mobile) &gt; <span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="单字段查重删除"><a href="#单字段查重删除" class="headerlink" title="单字段查重删除"></a>单字段查重删除</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">member</span> <span class="keyword">where</span> mobile <span class="keyword">in</span> (<span class="keyword">select</span> mobile <span class="keyword">from</span> <span class="keyword">member</span> <span class="keyword">group</span> <span class="keyword">by</span> mobile   <span class="keyword">having</span> <span class="keyword">count</span>(mobile) &gt; <span class="number">1</span>) <span class="keyword">and</span> <span class="keyword">rowid</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">min</span>(<span class="keyword">rowid</span>) <span class="keyword">from</span> <span class="keyword">member</span> <span class="keyword">group</span> <span class="keyword">by</span> mobile <span class="keyword">having</span> <span class="keyword">count</span>(mobile)&gt;<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="多字段"><a href="#多字段" class="headerlink" title="多字段"></a>多字段</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">member</span> a <span class="keyword">where</span> (a.mobile,a.email) <span class="keyword">in</span> (<span class="keyword">select</span> mobile,email <span class="keyword">from</span> <span class="keyword">member</span> <span class="keyword">group</span> <span class="keyword">by</span> mobile,email <span class="keyword">having</span> <span class="keyword">count</span>(*) &gt; <span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="多字段查重删除"><a href="#多字段查重删除" class="headerlink" title="多字段查重删除"></a>多字段查重删除</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">member</span> a <span class="keyword">where</span> (a.mobile,a.email) <span class="keyword">in</span> (<span class="keyword">select</span> mobile,email <span class="keyword">from</span> <span class="keyword">member</span> <span class="keyword">group</span> <span class="keyword">by</span> mobile,email <span class="keyword">having</span> <span class="keyword">count</span>(*) &gt; <span class="number">1</span>) <span class="keyword">and</span> <span class="keyword">rowid</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">min</span>(<span class="keyword">rowid</span>) <span class="keyword">from</span> <span class="keyword">member</span> <span class="keyword">group</span> <span class="keyword">by</span> mobile,email <span class="keyword">having</span> <span class="keyword">count</span>(*)&gt;<span class="number">1</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mysql查重：&lt;br&gt;
    
    </summary>
    
      <category term="BackEnd" scheme="https://stanye.com/blog/categories/BackEnd/"/>
    
    
      <category term="mysql" scheme="https://stanye.com/blog/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>php&amp;引用</title>
    <link href="https://stanye.com/blog/2017/04/29/php-cite.html"/>
    <id>https://stanye.com/blog/2017/04/29/php-cite.html</id>
    <published>2017-04-29T11:10:39.000Z</published>
    <updated>2019-04-26T08:52:25.490Z</updated>
    
    <content type="html"><![CDATA[<p>php的引用–在变量或者函数、对象等前面加上&amp;符号,允许两个变量来指向同一个内容<br><a id="more"></a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="string">"111"</span>;</span><br><span class="line">$b = &amp;$a;</span><br><span class="line"><span class="keyword">echo</span> $a; <span class="comment">// 这里输出:111</span></span><br><span class="line"><span class="keyword">echo</span> $b; <span class="comment">// 这里输出:111</span></span><br><span class="line">$b=<span class="string">"222"</span>;</span><br><span class="line"><span class="keyword">echo</span> $a; <span class="comment">// 这里$a的值变为222 所以输出222 echo $b;//这里输出222</span></span><br></pre></td></tr></table></figure></p><p>￼</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">demo</span><span class="params">(&amp;$a)</span></span>&#123;</span><br><span class="line">    $a = $a + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">$b = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">echo</span> $b; <span class="comment">// 100</span></span><br><span class="line">demo($b);  <span class="comment">//$b的内存地址</span></span><br><span class="line"><span class="keyword">echo</span> $b; <span class="comment">// 101</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> &amp;<span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> $b=<span class="number">0</span>;<span class="comment">//申明一个静态变量</span></span><br><span class="line">    $b=$b+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">echo</span> $b;</span><br><span class="line">    <span class="keyword">return</span> $b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php的引用–在变量或者函数、对象等前面加上&amp;amp;符号,允许两个变量来指向同一个内容&lt;br&gt;
    
    </summary>
    
      <category term="BackEnd" scheme="https://stanye.com/blog/categories/BackEnd/"/>
    
    
      <category term="php" scheme="https://stanye.com/blog/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>使用using关键字对连接进行简化</title>
    <link href="https://stanye.com/blog/2017/04/29/sql-using.html"/>
    <id>https://stanye.com/blog/2017/04/29/sql-using.html</id>
    <published>2017-04-29T06:39:10.000Z</published>
    <updated>2019-04-11T03:10:47.968Z</updated>
    
    <content type="html"><![CDATA[<p>USING进行简化：<br>   1、查询必须是等连接的<br>   2、等连接中的列必须是同名<br><a id="more"></a><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> aname, bname  </span><br><span class="line"><span class="keyword">from</span> a <span class="keyword">inner</span> <span class="keyword">join</span> b  </span><br><span class="line"><span class="keyword">using</span>(<span class="keyword">category</span>)</span><br></pre></td></tr></table></figure></p><p>在使用using是需要注意以下几个问题<br>   1、在select子句中只能指定该列名，不能使用表名或别名<br>   2、在using子句中也只能单独使用列名<br>对于多与两个表的连接<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> c.c_name, p.p_name , f.f_name</span><br><span class="line"><span class="keyword">from</span> ctable c, ptable p, ftable f</span><br><span class="line"><span class="keyword">where</span> c.user_id = f.user_id</span><br><span class="line"><span class="keyword">and</span> p.p_id = f.p_id  </span><br><span class="line"><span class="keyword">and</span> p.type_id = f.type_id;</span><br></pre></td></tr></table></figure></p><p>使用using对上面的sql语句进行重写</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> c.c_name, p.p_name, f.type  </span><br><span class="line"><span class="keyword">from</span> ctable c <span class="keyword">inner</span> <span class="keyword">join</span> ftable f  </span><br><span class="line"><span class="keyword">using</span>(user_id)  </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> ptable p  </span><br><span class="line"><span class="keyword">using</span>(p_id)  </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> ftable f  </span><br><span class="line"><span class="keyword">using</span>(type_id);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;USING进行简化：&lt;br&gt;   1、查询必须是等连接的&lt;br&gt;   2、等连接中的列必须是同名&lt;br&gt;
    
    </summary>
    
      <category term="BackEnd" scheme="https://stanye.com/blog/categories/BackEnd/"/>
    
    
      <category term="mysql" scheme="https://stanye.com/blog/tags/mysql/"/>
    
      <category term="using" scheme="https://stanye.com/blog/tags/using/"/>
    
  </entry>
  
  <entry>
    <title>mysql-simple-usage</title>
    <link href="https://stanye.com/blog/2017/04/28/mysql-simple-usage.html"/>
    <id>https://stanye.com/blog/2017/04/28/mysql-simple-usage.html</id>
    <published>2017-04-28T06:16:57.000Z</published>
    <updated>2019-04-30T08:03:46.409Z</updated>
    
    <content type="html"><![CDATA[<h2 id="连接mysql"><a href="#连接mysql" class="headerlink" title="连接mysql"></a>连接mysql</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h&#123;server host address&#125; -u&#123;username&#125; －p&#123;password&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u&#123;username&#125; -p&#123;oldpassword&#125; password&#123;newpassword&#125;</span><br></pre></td></tr></table></figure><h2 id="增加新用户"><a href="#增加新用户" class="headerlink" title="增加新用户"></a>增加新用户</h2><p>  已经进入mysql<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant select on &#123;dbname&#125;.* to &#123;username&#125;@&#123;host&#125; identified by &quot;&#123;password&#125;&quot;</span><br></pre></td></tr></table></figure></p><p>  但是为了防止host远程可以连接，一般只开放host配置到localhost，即先登录到服务器，再连接本机mysql</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">// 显示数据库</span><br><span class="line">show databases;</span><br><span class="line"></span><br><span class="line">// 显示表</span><br><span class="line">use &#123;某个database&#125;;</span><br><span class="line">show tables;</span><br><span class="line"></span><br><span class="line">// 显示某个表结构</span><br><span class="line">desc &#123;表名&#125;;</span><br><span class="line"></span><br><span class="line">// 建库</span><br><span class="line">create database &#123;dbname&#125;;</span><br><span class="line"></span><br><span class="line">// 建表</span><br><span class="line">create table &#123;tablename&#125; (&#123;`id`....,`name`...&#125;);</span><br><span class="line"></span><br><span class="line">// 删库</span><br><span class="line">drop database &#123;dbname&#125;;</span><br><span class="line"></span><br><span class="line">// 删表</span><br><span class="line">drop table &#123;tablename&#125;;</span><br><span class="line"></span><br><span class="line">// 增删改查等不做赘述</span><br><span class="line"></span><br><span class="line">// 增加字段</span><br><span class="line">alter table dbname add column &#123;字段名&#125;</span><br><span class="line"></span><br><span class="line">// 修改字段</span><br><span class="line">alter table dbname change &#123;字段名&#125; &#123;新字段名&#125;</span><br><span class="line"></span><br><span class="line">// 删除字段</span><br><span class="line">alter table dbname drop column &#123;字段名&#125;</span><br></pre></td></tr></table></figure><h2 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump &#123;dbname&#125; &gt; jiaoben.mysql</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;连接mysql&quot;&gt;&lt;a href=&quot;#连接mysql&quot; class=&quot;headerlink&quot; title=&quot;连接mysql&quot;&gt;&lt;/a&gt;连接mysql&lt;/h2&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql -h&amp;#123;server host address&amp;#125; -u&amp;#123;username&amp;#125; －p&amp;#123;password&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="BackEnd" scheme="https://stanye.com/blog/categories/BackEnd/"/>
    
    
      <category term="mysql" scheme="https://stanye.com/blog/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql给表赋权</title>
    <link href="https://stanye.com/blog/2017/04/04/mysql-grant.html"/>
    <id>https://stanye.com/blog/2017/04/04/mysql-grant.html</id>
    <published>2017-04-04T03:22:52.000Z</published>
    <updated>2019-04-11T03:08:48.884Z</updated>
    
    <content type="html"><![CDATA[<p>mysql赋权：<br><a id="more"></a><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">drop</span> <span class="keyword">on</span> sch_m.common_member <span class="keyword">to</span> dev@<span class="string">'localhost'</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mysql赋权：&lt;br&gt;
    
    </summary>
    
      <category term="BackEnd" scheme="https://stanye.com/blog/categories/BackEnd/"/>
    
    
      <category term="mysql" scheme="https://stanye.com/blog/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>css两行截取</title>
    <link href="https://stanye.com/blog/2017/04/03/css-cut-2-line.html"/>
    <id>https://stanye.com/blog/2017/04/03/css-cut-2-line.html</id>
    <published>2017-04-03T08:30:22.000Z</published>
    <updated>2019-04-11T03:08:00.715Z</updated>
    
    <content type="html"><![CDATA[<p>css两行截取解决办法：<br><a id="more"></a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;</span><br><span class="line"><span class="selector-tag">text-overflow</span>: <span class="selector-tag">ellipsis</span>;</span><br><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">-webkit-box</span>;</span><br><span class="line"><span class="selector-tag">-webkit-line-clamp</span>: 2;</span><br><span class="line"><span class="selector-tag">-webkit-box-orient</span>: <span class="selector-tag">vertical</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;css两行截取解决办法：&lt;br&gt;
    
    </summary>
    
      <category term="FrontEnd" scheme="https://stanye.com/blog/categories/FrontEnd/"/>
    
    
      <category term="css" scheme="https://stanye.com/blog/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>table文字溢出控制</title>
    <link href="https://stanye.com/blog/2017/04/03/css-fix-table-wrap.html"/>
    <id>https://stanye.com/blog/2017/04/03/css-fix-table-wrap.html</id>
    <published>2017-04-03T04:30:22.000Z</published>
    <updated>2019-04-11T03:08:07.053Z</updated>
    
    <content type="html"><![CDATA[<p>table换行解决办法：<br><a id="more"></a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">table-layout</span>:fixed;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">word-break</span>:keep-all;</span><br><span class="line">    <span class="attribute">white-space</span>:nowrap;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden;</span><br><span class="line">    <span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;table换行解决办法：&lt;br&gt;
    
    </summary>
    
      <category term="FrontEnd" scheme="https://stanye.com/blog/categories/FrontEnd/"/>
    
    
      <category term="css" scheme="https://stanye.com/blog/tags/css/"/>
    
      <category term="table" scheme="https://stanye.com/blog/tags/table/"/>
    
  </entry>
  
  <entry>
    <title>php file_put_contents 函数</title>
    <link href="https://stanye.com/blog/2017/03/28/php-file_put_contents.html"/>
    <id>https://stanye.com/blog/2017/03/28/php-file_put_contents.html</id>
    <published>2017-03-28T01:21:11.000Z</published>
    <updated>2019-04-11T03:08:59.547Z</updated>
    
    <content type="html"><![CDATA[<p>file_put_contents()功能函数（集成了fopen、fwrite、fclose) 将一个字符串写入文件.<br><a id="more"></a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int file_put_contents ( string filename, string data [, int flags [, resource context]] )</span><br></pre></td></tr></table></figure></p><p>和依次调用 fopen()，fwrite() 以及 fclose() 功能一样。<br>参数 data 可以是数组，这就相当于 file_put_contents($filename, join(‘’, $array))</p><ol><li>filename 要被写入数据的文件名。 </li><li>data 要写入的数据。类型可以是 string，array 或者是 stream 资源（如上面所说的那样）。 </li><li>flags 可以是 FILE_USE_INCLUDE_PATH，FILE_APPEND 和／或 LOCK_EX（获得一个独占锁定），然而使用 FILE_USE_INCLUDE_PATH 时要特别谨慎。 </li><li>context 一个 context 资源。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;file_put_contents()功能函数（集成了fopen、fwrite、fclose) 将一个字符串写入文件.&lt;br&gt;
    
    </summary>
    
      <category term="BackEnd" scheme="https://stanye.com/blog/categories/BackEnd/"/>
    
    
      <category term="php" scheme="https://stanye.com/blog/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>sql note</title>
    <link href="https://stanye.com/blog/2017/03/27/sql-join.html"/>
    <id>https://stanye.com/blog/2017/03/27/sql-join.html</id>
    <published>2017-03-27T10:30:22.000Z</published>
    <updated>2019-04-26T08:53:39.763Z</updated>
    
    <content type="html"><![CDATA[<h2 id="left-join-right-join-inner-join"><a href="#left-join-right-join-inner-join" class="headerlink" title="left-join/right join/inner join"></a>left-join/right join/inner join</h2><a id="more"></a><ol><li>left join(左联接) 返回包括左表中的所有记录和右表中联结字段相等的记录.right join(右联接) 返回包括右表中的所有记录和左表中联结字段相等的记录. inner join(等值联接) 只返回两个表中联结字段相等的行.</li><li>left join是以A表的记录为基础的,A可以看成左表,B可以看成右表,left join是以左表为准的.左表(A)的记录将会全部表示出来,而右表(B)只会显示符合搜索条件的记录.B表记录不足的地方均为NULL.LEFT JOIN操作用于在任何的 FROM 子句中，组合来源表的记录。使用 LEFT JOIN 运算来创建一个左边外部联接。左边外部联接将包含了从第一个（左边）开始的两个表中的全部记录，即使在第二个（右边）表中并没有相符值的记录</li><li>right join和left join的结果刚好相反,这次是以右表(B)为基础的,A表不足的地方用NULL填充.</li><li>inner join并不以谁为基础,它只显示符合条件的记录</li></ol><h2 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h2><ol><li><p>取出第一条记录。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tablename <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>第二条记录</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tablename <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>从第11条到31条（共计20条）</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tablename <span class="keyword">limit</span> <span class="number">10</span>,<span class="number">20</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;left-join-right-join-inner-join&quot;&gt;&lt;a href=&quot;#left-join-right-join-inner-join&quot; class=&quot;headerlink&quot; title=&quot;left-join/right join/inner join&quot;&gt;&lt;/a&gt;left-join/right join/inner join&lt;/h2&gt;
    
    </summary>
    
      <category term="BackEnd" scheme="https://stanye.com/blog/categories/BackEnd/"/>
    
    
      <category term="mysql" scheme="https://stanye.com/blog/tags/mysql/"/>
    
      <category term="sql" scheme="https://stanye.com/blog/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>jQuery判断页面滚动到底/到顶</title>
    <link href="https://stanye.com/blog/2016/09/30/jquery-scrollTop.html"/>
    <id>https://stanye.com/blog/2016/09/30/jquery-scrollTop.html</id>
    <published>2016-09-30T07:12:19.000Z</published>
    <updated>2019-04-30T08:04:12.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 垂直滚动条</span></span><br><span class="line">$(<span class="built_in">document</span>).scrollTop()</span><br><span class="line"><span class="comment">// 水平滚动条</span></span><br><span class="line">$(<span class="built_in">document</span>).scrollLeft()</span><br><span class="line"><span class="comment">// 页面高度</span></span><br><span class="line">$(<span class="built_in">document</span>).height()</span><br><span class="line"><span class="comment">// 浏览器窗口高度</span></span><br><span class="line">$(<span class="built_in">window</span>).height()</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 到顶</span></span><br><span class="line">$(<span class="built_in">document</span>).scrollTop() == <span class="number">0</span></span><br><span class="line"><span class="comment">// 到底</span></span><br><span class="line">$(<span class="built_in">document</span>).scrollTop() &gt;= $(<span class="built_in">document</span>).height() - $(<span class="built_in">window</span>).height()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 垂直滚动条&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).scrollTop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 水平滚动条&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).scrollLeft()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 页面高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).height()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 浏览器窗口高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).height()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="FrontEnd" scheme="https://stanye.com/blog/categories/FrontEnd/"/>
    
    
      <category term="jquery" scheme="https://stanye.com/blog/tags/jquery/"/>
    
      <category term="javascript" scheme="https://stanye.com/blog/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>regex in my program</title>
    <link href="https://stanye.com/blog/2016/07/15/regex-used.html"/>
    <id>https://stanye.com/blog/2016/07/15/regex-used.html</id>
    <published>2016-07-15T03:41:43.000Z</published>
    <updated>2019-04-30T08:04:59.954Z</updated>
    
    <content type="html"><![CDATA[<p>用到的一些正则记录：<br><a id="more"></a></p><ol><li>匹配&gt;&lt; <code>&gt;[\s]+&lt;</code></li><li><p>匹配反斜杠(匹配一个反斜杠要用四个反斜杠)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\\\</span><br></pre></td></tr></table></figure><ol><li>字符串里面表示斜杠就需要两个斜杠<code>\\</code></li><li>正则表达式里的斜杠需要转意，是用<code>\\</code>标示。</li><li>第一个斜杠是转义符，第二个斜杠是斜杠本身，第三个斜杠是转义符，第四个斜杠是斜杠本身</li></ol></li><li><p>密码校验</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PASSWORD_PATTERN = <span class="string">"^(?![a-zA-z]+$)(?!\\d+$)(?![!\"#$%&amp;#$%&amp;amp;'()*+,-./:;&amp;#$%&amp;amp;'()*+,-./:;&amp;lt;=&amp;#$%&amp;amp;'()*+,-./:;&amp;lt;=&amp;gt;?@\\[\\]^_`&#123;|&#125;~]+$)[a-zA-Z\\d!\"#$%&amp;#$%&amp;amp;'()*+,-./:;&amp;#$%&amp;amp;'()*+,-./:;&amp;lt;=&amp;#$%&amp;amp;'()*+,-./:;&amp;lt;=&amp;gt;?@\\[\\]^_`&#123;|&#125;~]&#123;6,16&#125;$"</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li><p>input标签验证</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 只能输入英文</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">onkeyup</span>=<span class="string">"value=value.replace(/[^a-zA-Z]/g,'')"</span> /&gt;</span></span><br><span class="line">// 无法粘贴</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">onkeydown</span>=<span class="string">"fncKeyStop(event)"</span> <span class="attr">onpaste</span>=<span class="string">"return false"</span> /&gt;</span></span><br><span class="line">// 屏蔽右键</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">oncontextmenu</span>=<span class="string">"return false"</span> /&gt;</span></span><br><span class="line">// 只能输入数字</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">onkeyup</span>=<span class="string">"this.value=this.value.replace(/\D/g,'')"</span> /&gt;</span></span><br><span class="line">// 只能输入数字，小数点：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">onkeyup</span>=<span class="string">"value=value.replace(/[^\d\.]/g,'')"</span>&gt;</span> /&gt;</span><br><span class="line">// 只能输入数字，小数点，下划线：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">onkeyup</span>=<span class="string">"value=value.replace(/[^\d\._]/g,'')"</span> /&gt;</span></span><br><span class="line">// 只能输入汉字：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">onkeyup</span>=<span class="string">"value=value.replace(/[^\u4E00-\u9FA5]/g,'')"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">onbeforepaste</span>=<span class="string">"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\u4E00-\u9FA5]/g,''))"</span>&gt;</span></span><br><span class="line">// 禁止输入法输入：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">style</span>=<span class="string">"ime-mode: disabled"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用到的一些正则记录：&lt;br&gt;
    
    </summary>
    
      <category term="BackEnd" scheme="https://stanye.com/blog/categories/BackEnd/"/>
    
    
      <category term="regex" scheme="https://stanye.com/blog/tags/regex/"/>
    
  </entry>
  
</feed>
